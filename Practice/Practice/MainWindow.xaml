<Window x:Class="Practice.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:Icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
        xmlns:fa="http://schemas.fontawesome.io/icons/"
        xmlns:lvs="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"

        
        xmlns:local="clr-namespace:Practice"
        mc:Ignorable="d"
        Title="MainWindow" Height="760" Width="1280" Background="Transparent"
        ResizeMode="NoResize" AllowsTransparency="True" WindowStyle="None"
        WindowStartupLocation="CenterScreen">
    <Border Background="#cfd5e5" CornerRadius="40" BorderThickness="2" 
            BorderBrush="#ebedf3" Padding="20" MouseDown="Border_MouseDown">
        <Border CornerRadius="40">
            <Border.Background>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                    <GradientStop Color="#fefefe" Offset="0"/>
                    <GradientStop Color="#ededef" Offset="1"/>
                </LinearGradientBrush>
            </Border.Background>
        
          
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="130"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                
                
                
                
                <!--Left menu-->
                <Border Background="#009999" CornerRadius="30" Margin="20">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="60"/>
                        </Grid.RowDefinitions>

                        <StackPanel VerticalAlignment="Top" Margin="0 10">
                            <Button Style="{StaticResource menuButton}">
                                <Icon:PackIconMaterial Kind="HomeVariant" Style="{StaticResource menuButtonIcon}" />
                            </Button>

                            <Button Style="{StaticResource menuButton}">
                                <Icon:PackIconMaterial Kind="Cog" Style="{StaticResource menuButtonIcon}" />
                            </Button>

                            <Button Style="{StaticResource menuButton}">
                                <Icon:PackIconMaterial Kind="Help" Style="{StaticResource menuButtonIcon}" />
                            </Button>
                        </StackPanel>

                        <Button Grid.Row="1" Margin="0 0 0 10" Style="{StaticResource menuButton}" Click="ButtonExit_Click">
                            <Icon:PackIconMaterial Kind="Logout" Style="{StaticResource menuButtonIcon}" />
                        </Button>

                    </Grid>
                </Border>
                <!--Right menu-->
                

                <Grid Grid.Column="2">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="50"/>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="120"/>
                    </Grid.RowDefinitions>

                    <StackPanel HorizontalAlignment="Right" Margin="0 10" Orientation="Horizontal" VerticalAlignment="Center">
                        <Button Style="{StaticResource IconButtonStyle}" Click="ButtonMinimize_Click">
                            <Icon:PackIconMaterial Kind="Minus" />
                        </Button>

                        <Button Style="{StaticResource IconButtonStyle}" Margin="5 0 20 0" Click="ButtonExit_Click">
                            <Icon:PackIconMaterial Kind="Close"/>
                        </Button>
                    </StackPanel>

                    

                    <Border Grid.Row="1" Background="#009999" CornerRadius="30" Margin="40">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>

                            <Border Margin="40" Background="#1D7373" CornerRadius="30"/>

                            <Border Name="leftImageBorder" Style="{StaticResource imageButton}" MouseLeftButtonDown="leftImage_MouseLeftButtonDown" MouseEnter="leftImageBorder_MouseEnter" MouseLeave="leftImageBorder_MouseLeave">
                                <Grid>
                                    <Image Name="leftImage"/>
                                    <Icon:PackIconMaterial  x:Name="leftHoverIcon" Kind="Image" Visibility="Collapsed" 
                                                            Height="50" Width="50" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>

                            <Border Grid.Column="1" Margin="40" Background="#1D7373" CornerRadius="30"/>
                            <Border Grid.Column="1" Name="rightImageBorder" Style="{StaticResource imageButton}" MouseLeftButtonDown="rightImage_MouseLeftButtonDown" MouseEnter="rightImageBorder_MouseEnter" MouseLeave="rightImageBorder_MouseLeave">
                                <Grid>
                                    <Image Name="rightImage"/>
                                    <Icon:PackIconMaterial  x:Name="rightHoverIcon" Kind="Image" Visibility="Collapsed" 
                                Height="50" Width="50" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                            
                            





                        </Grid>
                        
                        
                    </Border>

                    <fa:ImageAwesome x:Name="loadIcon" Grid.Row="1" Icon="Image" Spin="True" Height="48" Width="48" Visibility="Hidden"/>

                    <!--<Ellipse Grid.Row="1" x:Name="loadingIndicator" Width="50" Height="50" Stroke="Black" StrokeThickness="4" RenderTransformOrigin="0.5,0.5">
                        <Ellipse.RenderTransform>
                            <RotateTransform/>
                        </Ellipse.RenderTransform>
                        <Ellipse.Style>
                            <Style TargetType="Ellipse">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsLoading}" Value="True">
                                        <DataTrigger.EnterActions>
                                            <BeginStoryboard>
                                                <Storyboard>
                                                    <DoubleAnimation
    Storyboard.TargetProperty="(Ellipse.RenderTransform).(RotateTransform.Angle)"
    From="0" To="360" Duration="0:0:1"
    RepeatBehavior="Forever"/>
                                                </Storyboard>
                                            </BeginStoryboard>
                                        </DataTrigger.EnterActions>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Ellipse.Style>
                    </Ellipse>-->

                    <Button Grid.Row="2" Margin="300 0 300 30" TextBlock.FontSize="50" 
        Content="Вычислить" Foreground="White" TextBlock.FontFamily="Calibri Bold" Click="ButtonCalc_Click">
                        <Button.Style>
                            <Style TargetType="{x:Type Button}">
                                <Setter Property="Background" Value="#009999"/>
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type Button}">
                                            <Border Background="{TemplateBinding Background}" CornerRadius="30">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="#006363"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>




                </Grid>





            </Grid>

        </Border>
    </Border>
</Window>
